#!/bin/bash

if [ -z "$1" ]; then
    echo "Enter a command, Use 'frostproxy help' for more info"
    exit 1
fi

if [ "$1" == "help" ]; then
    echo "Usage: frostproxy [command]"
    echo ""
    echo "Commands:"
    echo "  config token [token]"
    echo "  tunnel target 3000 example.com --ssl (OR for no ssl) tunnel target 3000 example.com"
    echo "  list [tunnels]"
    exit 0
fi

if [ "$1" == "config" ]; then
    if [ -z "$2" ]; then
        echo "specify a config: token"
        exit 1
    fi
    
    configfile='/var/frostproxy/config.cfg'
    
    if [ ! -f "${configfile}" ] ; then
        mkdir -p /var/frostproxy/
        touch $configfile
        echo "token=\"$2\"" | sudo tee --append $configfile
    fi
    exit 0
fi

if [ "$1" == "tunnel" ]; then
    target="$2"
    domain_found=false
    ssl_found=false
    configfile='/var/frostproxy/config.cfg'
    
    if [ ! -f "${configfile}" ] ; then
        echo "config file not found, run 'frostproxy config [token]'"
        exit 1
    else
        
        source $configfile
        if [ -f "$token" ]; then
            echo "token not found, run 'frostproxy config [token]'"
            exit 1
        else
            if [ -z "$2" ]; then
                echo "specify a target: 8000"
                exit 1
            fi

            
            for arg in "$@"; do
              if [[ "$arg" == *"--domain="* ]]; then
                domain=$(echo "$arg" | awk -F '=' '{print $2}')
                domain_found=true
              fi
            done
            
            for arg in "$@"; do
              if [[ "$arg" == *"--ssl"* ]]; then
                ssl_found=true
              fi
            done
            
            
            set IP=%hostname -I | awk '{print $1}'
            targetmaster = "http://" + $target + $IP


            
            if [ "$domain_found" == true ]; then
                 echo "Domain: $domain"
                 
                 if [ "$ssl_found" == true ]; then
                     echo "domain = $domain | ssl = true"
                 else
                     echo "domain = $domain | ssl = false"
                 fi
                 
            else
              echo "Domain not found, generating a domain"
              domain="test.frostproxy.com"
              ssl_found=true
            fi
            
            #set /a sum=%IP% + %2
            #responsetunnel=curl -X POST https://frostproxy.com/api/tunnel/add/"$domain" -d "{ ID: '$token', target: '%sum%', ssl: '$ssl' }"
            
            #if [ "$responsetunnel.statusCode" == "200" ]; then
            #    echo "Tunnel created successfully"
            #    exit 1
            #fi
            
            #if [ "$responsetunnel.statusCode" == "400" ]; then
            #    echo "Tunnel already exists"
            #    exit 1
            #fi
            
            #if [ "$responsetunnel.statusCode" == "500" ]; then
            #    echo "Invalid token"
            #    exit 1
            #fi
            
            clear
            echo "Tunnel Running! Press CTRL+C to exit."
            
            echo "Session Status:          Online"
            if [ "$ssl_found" == "true" ]; then
                echo "Session Protocol:        https"
            fi
            if [ "$ssl_found" == "false" ]; then
                echo "Session Protocol:        http"
            fi
            echo "Website Interface:       $domain"
            if [ "$ssl_found" == "true" ]; then
                echo "Forwarding:              https://$domain -> '$targetmaster'"
            fi
            if [ "$ssl_found" == "false" ]; then
                echo "Forwarding:              http://$domain -> '$targetmaster'"
            fi
            
            trap "echo 'User has exited the session & tunnel has been deleted!'; exit" SIGINT
            
            while true; do
              sleep 1
            done
            
        fi
    fi
fi

if [ "$1" == "list" ]; then
    echo "Listing tunnels..."
    
    configfile='/var/frostproxy/config.cfg'
    
    if [ ! -f "${configfile}" ] ; then
        echo "config file not found, run 'frostproxy config [token]'"
        exit 1
    else
        
        source $configfile
        if [ -f "$token" ]; then
            echo "token not found, run 'frostproxy config [token]'"
            exit 1
        else
            if [ -z "$2" ]; then
                echo "specify a config: tunnels"
            fi
            
            if [ "$2" == "tunnels" ]; then
                echo "Tunnel List:"
                #tunnelresponse=curl -X GET https://frostproxy.com/api/tunnel/list -d "{ ID: '$token' }"
                
                #if [ "$tunnelresponse.statusCode" == "200" ]; then
                #    echo "$tunnelresponse"
                #    exit 1
                #fi
                
                #if [ "$tunnelresponse.statusCode" == "500" ]; then
                #    echo "Invalid token"
                #    exit 1
                #
fi
            fi
        fi
    fi
fi

if [ "$1" == "delete" ]; then
    echo "Deleting tunnel..."
    
    domain="$2"
    configfile='/var/frostproxy/config.cfg'
    
    if [ ! -f "${configfile}" ] ; then
        echo "config file not found, run 'frostproxy config [token]'"
        exit 1
    else
        
        source $configfile
        if [ -f "$token" ]; then
            echo "token not found, run 'frostproxy config [token]'"
            exit 1
        else
            if [ -z "$2" ]; then
                echo "specify a domain: example.com"
                exit 1
            fi
            
            #deleteresponse=curl -X DELETE https://frostproxy.com/api/tunnel/delete -d "{ ID: '$token', domain: '$domain' }"
            
            #if [ "$deleteresponse.statusCode" == "200" ]; then
            #    echo "Tunnel deleted successfully"
            #    exit 1
            #fi
            
            #if [ "$deleteresponse.statusCode" == "400" ]; then
            #    echo "Tunnel not found"
            #    exit 1
            #fi
            
            #if [ "$deleteresponse.statusCode" == "500" ]; then
            #    echo "Invalid token"
            #            #if [ "$deleteresponse.statusCode" == "500" ]; then
            #    echo "Invalid token"
            #    exit 1
            #fi
        fi
    fi
fi

if [ "$1" == "list" ]; then
    echo "Listing tunnels..."
    
    configfile='/var/frostproxy/config.cfg'
    
    if [ ! -f "${configfile}" ] ; then
        echo "config file not found, run 'frostproxy config [token]'"
        exit 1
    else
        
        source $configfile
        if [ -f "$token" ]; then
            echo "token not found, run 'frostproxy config [token]'"
            exit 1
        else
            #listresponse=curl -X GET https://frostproxy.com/api/tunnel/list -d "{ ID: '$token' }"
            
            #if [ "$listresponse.statusCode" == "200" ]; then
            #    echo "$listresponse.response"
            #    exit 1
            #fi
            
            #if [ "$listresponse.statusCode" == "400" ]; then
            #    echo "No tunnels found"
            #    exit 1
            #fi
            
            #if [ "$listresponse.statusCode" == "500" ]; then
            #    echo "Invalid token"
            #    exit 1
            #fi
        fi
    fi
fi




